//
// Author: OSTON <ti@oston.io>
// Name: Vue Base
// Description: Code for Vue projects
// File: functions.scss
// Location: @/styles/core/
//

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

@function rem($pixels, $context: $browser-context) {
  @return #{$pixels/$context}rem;
}

//  @function explode()   - separa uma slug em lista
//  {string} $string:     - string que sera separada
//  {string} $delimiter:  - delimitador para separacao
//  @return {list}:       - a lista resultante
@function explode($string, $delimiter) {
  $result: ();
  @if $delimiter == "" {
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }
    @return $result;
  }
  $exploding: true;
  @while $exploding {
    $d-index: str-index($string, $delimiter);
    @if $d-index {
      @if $d-index > 1 {
        $result: append($result, str-slice($string, 1, $d-index - 1));
        $string: str-slice($string, $d-index + str-length($delimiter));
      } @else if $d-index == 1 {
        $string: str-slice($string, 1, $d-index + str-length($delimiter));
      } @else {
        $result: append($result, $string);
        $exploding: false;
      }
    } @else {
      $result: append($result, $string);
      $exploding: false;
    }
  }
  @return $result;
}

@function is-valid-keyword-direction($value) {
  @return not not
    index(
      "top" "right" "bottom" "left" "to top" "to right" "to bottom" "to left"
        "to top right" "to right top" "to bottom right" "to right bottom"
        "to top left" "to left top" "to bottom left" "to left bottom",
      $value
    );
}

@function color($color) {
  @return map-get($colors, $color);
}
